<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jkky98.spubg.discord.repository.StaticMapper">

    <select id="getTopWeaponRankings" resultType="com.jkky98.spubg.discord.domain.WeaponRanking">
        SELECT USERNAME, WEAPON_NAME, weighted_avg_damage, ranking
        FROM (
        SELECT
        USERNAME,
        WEAPON_NAME,
        ROUND(total_damage / total_shots, 2) AS avg_damage,
        ROUND(weighted_damage / total_shots, 2) AS weighted_avg_damage,
        RANK() OVER (PARTITION BY WEAPON_NAME ORDER BY weighted_damage / total_shots DESC) AS ranking
        FROM (
        SELECT
        mm.MEMBER_ID,
        mem.USERNAME,
        mwd.WEAPON_NAME,
        SUM(mwd.DAMAGE) AS total_damage,
        COUNT(*) AS total_shots,
        SUM(mwd.DAM_DISTANCE) AS total_distance,
        SUM(mwd.DAMAGE * (1 + mwd.DAM_DISTANCE / 10000)) AS weighted_damage,
        SUM(1 + mwd.DAM_DISTANCE / 10000) AS total_weight
        FROM MATCH_WEAPON_DETAIL mwd
        JOIN MEMBER_MATCH mm ON mwd.M_MCH_ID = mm.M_MCH_ID
        JOIN MEMBER mem ON mm.MEMBER_ID = mem.MEMBER_ID
        WHERE mm.MEMBER_ID IN
        <foreach item="memberId" collection="memberIds" open="(" separator="," close=")">
            #{memberId, jdbcType=BIGINT}
        </foreach>
        AND mwd.DAMAGE > 0
        GROUP BY mm.MEMBER_ID, mem.USERNAME, mwd.WEAPON_NAME
        ) AS shot_data
        ) AS ranked_data
        WHERE ranking = 1
        ORDER BY WEAPON_NAME, ranking;
    </select>

    <select id="getHeadshotRankings" resultType="com.jkky98.spubg.discord.domain.HeadshotRanking">
        SELECT
        mem.MEMBER_ID,
        mem.USERNAME,
        COALESCE(headshot_data.headshot_count, 0) AS headshot_count,
        damage_data.total_damage_count,
        ROUND(COALESCE(headshot_data.headshot_count, 0) * 100.0 / damage_data.total_damage_count, 2) AS headshot_ratio,
        RANK() OVER (ORDER BY COALESCE(headshot_data.headshot_count, 0) * 100.0 / damage_data.total_damage_count DESC) AS ranking
        FROM MEMBER mem
        JOIN (
        -- ‚úÖ Ï†ÑÏ≤¥ Îç∞ÎØ∏ÏßÄ ÌöüÏàò Í≥ÑÏÇ∞ (NONSPECIFIED Ï†úÏô∏)
        SELECT
        mm.MEMBER_ID,
        COUNT(*) AS total_damage_count
        FROM MATCH_WEAPON_DETAIL mwd
        JOIN MEMBER_MATCH mm ON mwd.M_MCH_ID = mm.M_MCH_ID
        WHERE mwd.DAMAGE > 0
        AND mwd.DAMAGE_WHERE &lt;&gt; 'NONSPECIFIED'
        GROUP BY mm.MEMBER_ID
        ) AS damage_data ON mem.MEMBER_ID = damage_data.MEMBER_ID
        LEFT JOIN (
        -- ‚úÖ HEADSHOT ÌöüÏàò Í≥ÑÏÇ∞
        SELECT
        mm.MEMBER_ID,
        COUNT(*) AS headshot_count
        FROM MATCH_WEAPON_DETAIL mwd
        JOIN MEMBER_MATCH mm ON mwd.M_MCH_ID = mm.M_MCH_ID
        WHERE mwd.DAMAGE > 0
        AND mwd.DAMAGE_WHERE = 'HEADSHOT'
        GROUP BY mm.MEMBER_ID
        ) AS headshot_data ON mem.MEMBER_ID = headshot_data.MEMBER_ID
        ORDER BY ranking;
    </select>

    <select id="getGrenadeRankings" resultType="com.jkky98.spubg.discord.domain.GrenadeRanking">
        SELECT
            m.USERNAME,
            COUNT(*) AS total_grenade_count,
            SUM(mwd.DAMAGE) AS total_grenade_damage,
            ROUND(SUM(mwd.DAMAGE) / NULLIF(COUNT(*), 0), 2) AS avg_damage_per_grenade,
            -- üî• ÏÉàÎ°úÏö¥ Í∞ÄÏ§ë Îû≠ÌÇπ Ï†êÏàò Í≥ÑÏÇ∞ (W1=0.5, W2=0.3, W3=0.2 Ï†ÅÏö©)
            ROUND(
                    (SUM(mwd.DAMAGE) / NULLIF(COUNT(*), 0)) * 0.5 +   -- ÌèâÍ∑† Îç∞ÎØ∏ÏßÄ Î∞òÏòÅ
                    (LOG(1 + COUNT(*)) * 0.3) +                      -- ÏÇ¨Ïö© ÌöüÏàò (Î°úÍ∑∏ Î≥ÄÌôò)
                    (SUM(mwd.DAMAGE) * 0.2),                         -- Ï¥ù Îç∞ÎØ∏ÏßÄ Î∞òÏòÅ
                    2) AS weighted_score,
            RANK() OVER (ORDER BY
        (SUM(mwd.DAMAGE) / NULLIF(COUNT(*), 0)) * 0.5 +
        (LOG(1 + COUNT(*)) * 0.3) +
        (SUM(mwd.DAMAGE) * 0.2) DESC) AS ranking  -- üî• ÏÉàÎ°úÏö¥ Îû≠ÌÇπ
        FROM MATCH_WEAPON_DETAIL mwd
                 JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                 JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                 JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
        WHERE mwd.WEAPON_NAME = 'FRAG_GRENADE'
        GROUP BY mm.MEMBER_ID, m.USERNAME
        ORDER BY ranking;
    </select>

    <select id="getLongDistanceRankings" resultType="com.jkky98.spubg.discord.domain.LongDistanceRanking">
        SELECT
        m.username,
        ROUND((SUM(mwd.DAM_DISTANCE) / COUNT(*)) / 100, 2) AS avg_hit_distance,  -- ‚úÖ ÌèâÍ∑† ÌûàÌä∏ Í±∞Î¶¨ (100 ÎÇòÎàÑÍ∏∞)
        RANK() OVER (ORDER BY (SUM(mwd.DAM_DISTANCE) / COUNT(*)) DESC) AS ranking  -- ‚úÖ Í±∞Î¶¨/ÌûàÌä∏ ÏàúÏúºÎ°ú Îû≠ÌÇπ Îß§Í∏∞Í∏∞
        FROM MATCH_WEAPON_DETAIL mwd
        JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
        JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
        JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
        WHERE mwd.DAMAGE > 0
        AND mwd.DAMAGE_WHERE NOT IN ('NONE', 'NONSPECIFIED')  -- ‚úÖ NONE Î∞è NONSPECIFIED Ï†úÏô∏
        GROUP BY mm.MEMBER_ID, m.USERNAME
        ORDER BY ranking;
    </select>

    <select id="getRidingRankings" resultType="com.jkky98.spubg.discord.domain.RidingRanking" >
        SELECT
            m.username,
            SUM(mwd.DAMAGE) AS riding_damage,
            RANK() OVER (ORDER BY SUM(mwd.DAMAGE) DESC) AS ranking
        FROM MATCH_WEAPON_DETAIL mwd
                JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
        WHERE mwd.ATTACKER_IS_IN_VEHICLE = true
        GROUP BY mm.MEMBER_ID, m.username
        ORDER BY ranking;
    </select>


    <select id="getLotOfFireRankings" resultType="com.jkky98.spubg.discord.domain.LotOfFireRanking" >
        SELECT
            m.username,
            COUNT(mwd.M_MCH_ID) / COUNT(DISTINCT mm.MATCH_ID) AS FIRE,
            RANK() OVER (ORDER BY COUNT(mwd.M_MCH_ID) / COUNT(DISTINCT mm.MATCH_ID) DESC) AS ranking
        FROM MATCH_WEAPON_DETAIL mwd
                 JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                 JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                 JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
        GROUP BY mm.MEMBER_ID, m.username
        ORDER BY ranking;
    </select>

    <select id="getPhaseDealtRankings" resultType="com.jkky98.spubg.discord.domain.PhaseDealtRanking">
        SELECT
            m.username,
            ROUND(SUM(mwd.damage) / COUNT(DISTINCT mwd.m_mch_id), 1) AS avg_dealt,
            ROUND(SUM(mwd.phase * mwd.damage) / COUNT(DISTINCT mwd.m_mch_id), 1) AS weight_damage,
            RANK() OVER (ORDER BY SUM(mwd.phase * mwd.damage) / COUNT(DISTINCT mwd.m_mch_id) DESC) AS ranking
        FROM MATCH_WEAPON_DETAIL mwd
                 JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                 JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                 JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
        WHERE mwd.DAMAGE > 0
        GROUP BY mm.MEMBER_ID, m.USERNAME
        ORDER BY ranking;
    </select>

    <select id="getClutchDealtRankings" resultType="com.jkky98.spubg.discord.domain.ClutchDealtRanking">
        SELECT
            username,
            clutch_dealt,
            RANK() OVER (ORDER BY clutch_dealt DESC) AS ranking
        FROM (
                 SELECT
                     m.username,
                     ROUND(SUM(100 * damage * (1 - (attacker_health / 100))) / COUNT(*), 2) AS clutch_dealt
                 FROM MATCH_WEAPON_DETAIL mwd
                          JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                          JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                          JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
                 WHERE mwd.DAMAGE > 0
                 GROUP BY mm.MEMBER_ID, m.username
             ) t
        ORDER BY ranking;
    </select>

    <select id="getGroggyRankings" resultType="com.jkky98.spubg.discord.domain.GroggyRanking">
        SELECT
            t.username,
            t.total_matches,
            t.groggy_ratio,
            RANK() OVER (ORDER BY t.groggy_ratio DESC) AS ranking
        FROM (
                 SELECT
                     m.username,
                     COUNT(DISTINCT mwd.m_mch_id) AS total_matches,
                     ROUND(SUM(CASE WHEN mwd.groggy = true THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT mwd.m_mch_id), 2) AS groggy_ratio
                 FROM MATCH_WEAPON_DETAIL mwd
                          JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                          JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                          JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
                 GROUP BY mm.MEMBER_ID, m.username
             ) AS t
        ORDER BY ranking;
    </select>
</mapper>