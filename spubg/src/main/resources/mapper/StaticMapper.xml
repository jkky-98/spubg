<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jkky98.spubg.discord.repository.StaticMapper">

    <select id="getTopWeaponRankings" resultType="com.jkky98.spubg.discord.domain.WeaponRanking">
        SELECT
            T.USERNAME,
            T.WEAPON_NAME,
            COALESCE(T.AVG_DAMAGE, 0) AS AVG_DAMAGE,
            COALESCE(T.AVG_GROGGY, 0) AS AVG_GROGGY,
            COALESCE(T.AVG_GROGGY_DISTANCE, 0) AS AVG_GROGGY_DISTANCE
        FROM (
            SELECT
                MEM.USERNAME,
                MWD.WEAPON_NAME,
                ROUND(SUM(MWD.DAMAGE) / COUNT(DISTINCT MWD.M_MCH_ID), 0) AS AVG_DAMAGE,
                ROUND(CAST(SUM(MWD.GROGGY) AS DECIMAL(10,2)) / CAST(COUNT(DISTINCT MWD.M_MCH_ID) AS DECIMAL(10,2)), 2) AS AVG_GROGGY,
                ROUND(AVG(CASE WHEN MWD.GROGGY = TRUE THEN MWD.DAM_DISTANCE / 100 END), 0) AS AVG_GROGGY_DISTANCE,
                ROW_NUMBER() OVER (
                    PARTITION BY MEM.USERNAME
                    ORDER BY SUM(MWD.DAMAGE) DESC
                ) AS RN
            FROM MATCH_WEAPON_DETAIL MWD
            JOIN MEMBER_MATCH MM ON MWD.M_MCH_ID = MM.M_MCH_ID
            JOIN MATCH M ON M.MATCH_ID = MM.MATCH_ID
            JOIN MEMBER MEM ON MEM.MEMBER_ID = MM.MEMBER_ID
            GROUP BY
                MEM.USERNAME,
                MWD.WEAPON_NAME
        ) T
        WHERE T.RN <![CDATA[<=]]> 2
        ORDER BY T.USERNAME, T.RN;
    </select>

    <select id="getHeadshotRankings" resultType="com.jkky98.spubg.discord.domain.HeadshotRanking">
        SELECT
            mem.MEMBER_ID,
            mem.USERNAME,
            COALESCE(headshot_data.headshot_count, 0) AS headshot_count,
            damage_data.total_damage_count,
            ROUND(COALESCE(headshot_data.headshot_count, 0) * 100.0 / damage_data.total_damage_count, 2) AS headshot_ratio,
            RANK() OVER (ORDER BY COALESCE(headshot_data.headshot_count, 0) * 100.0 / damage_data.total_damage_count DESC) AS ranking
        FROM MEMBER mem
        JOIN (
            SELECT
                mm.MEMBER_ID,
                COUNT(*) AS total_damage_count
            FROM MATCH_WEAPON_DETAIL mwd
            JOIN MEMBER_MATCH mm ON mwd.M_MCH_ID = mm.M_MCH_ID
            WHERE mwd.DAMAGE > 0
              AND mwd.DAMAGE_WHERE <![CDATA[<>]]> 'NONSPECIFIED'
            GROUP BY mm.MEMBER_ID
        ) AS damage_data ON mem.MEMBER_ID = damage_data.MEMBER_ID
        LEFT JOIN (
            SELECT
                mm.MEMBER_ID,
                COUNT(*) AS headshot_count
            FROM MATCH_WEAPON_DETAIL mwd
            JOIN MEMBER_MATCH mm ON mwd.M_MCH_ID = mm.M_MCH_ID
            WHERE mwd.DAMAGE > 0
              AND mwd.DAMAGE_WHERE = 'HEADSHOT'
            GROUP BY mm.MEMBER_ID
        ) AS headshot_data ON mem.MEMBER_ID = headshot_data.MEMBER_ID
        ORDER BY ranking;
    </select>

    <select id="getGrenadeRankings" resultType="com.jkky98.spubg.discord.domain.GrenadeRanking">
        SELECT
            m.USERNAME,
            COUNT(*) AS total_grenade_count,
            SUM(mwd.DAMAGE) AS total_grenade_damage,
            ROUND(SUM(mwd.DAMAGE) / NULLIF(COUNT(*), 0), 2) AS avg_damage_per_grenade,
            ROUND(
                    (SUM(mwd.DAMAGE) / NULLIF(COUNT(*), 0)) * 0.5 +
                    (LOG(1 + COUNT(*)) * 0.3) +
                    (SUM(mwd.DAMAGE) * 0.2),
                    2) AS weighted_score,
            RANK() OVER (ORDER BY
        (SUM(mwd.DAMAGE) / NULLIF(COUNT(*), 0)) * 0.5 +
        (LOG(1 + COUNT(*)) * 0.3) +
        (SUM(mwd.DAMAGE) * 0.2) DESC) AS ranking
        FROM MATCH_WEAPON_DETAIL mwd
                 JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                 JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                 JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
        WHERE mwd.WEAPON_NAME = 'FRAG_GRENADE'
        GROUP BY mm.MEMBER_ID, m.USERNAME
        ORDER BY ranking;
    </select>

    <select id="getLongDistanceRankings" resultType="com.jkky98.spubg.discord.domain.LongDistanceRanking">
        SELECT
            m.username,
            ROUND((SUM(mwd.DAM_DISTANCE) / COUNT(*)) / 100, 2) AS avg_hit_distance,
            RANK() OVER (ORDER BY (SUM(mwd.DAM_DISTANCE) / COUNT(*)) DESC) AS ranking
        FROM MATCH_WEAPON_DETAIL mwd
                JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
        WHERE mwd.DAMAGE > 0
            AND mwd.DAMAGE_WHERE NOT IN ('NONE', 'NONSPECIFIED')
        GROUP BY mm.MEMBER_ID, m.USERNAME
        ORDER BY ranking;
    </select>

    <select id="getRidingRankings" resultType="com.jkky98.spubg.discord.domain.RidingRanking" >
        SELECT
            m.username,
            SUM(mwd.DAMAGE) AS riding_damage,
            RANK() OVER (ORDER BY SUM(mwd.DAMAGE) DESC) AS ranking
        FROM MATCH_WEAPON_DETAIL mwd
                JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
        WHERE mwd.ATTACKER_IS_IN_VEHICLE = true
        GROUP BY mm.MEMBER_ID, m.username
        ORDER BY ranking;
    </select>


    <select id="getLotOfFireRankings" resultType="com.jkky98.spubg.discord.domain.LotOfFireRanking" >
        SELECT
            m.username,
            COUNT(mwd.M_MCH_ID) / COUNT(DISTINCT mm.MATCH_ID) AS FIRE,
            RANK() OVER (ORDER BY COUNT(mwd.M_MCH_ID) / COUNT(DISTINCT mm.MATCH_ID) DESC) AS ranking
        FROM MATCH_WEAPON_DETAIL mwd
                 JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                 JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                 JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
        GROUP BY mm.MEMBER_ID, m.username
        ORDER BY ranking;
    </select>

    <select id="getPhaseDealtRankings" resultType="com.jkky98.spubg.discord.domain.PhaseDealtRanking">
        SELECT
            m.username,
            ROUND(SUM(mwd.damage) / COUNT(DISTINCT mwd.m_mch_id), 1) AS avg_dealt,
            ROUND(SUM(mwd.phase * mwd.damage) / COUNT(DISTINCT mwd.m_mch_id), 1) AS weight_damage,
            RANK() OVER (ORDER BY SUM(mwd.phase * mwd.damage) / COUNT(DISTINCT mwd.m_mch_id) DESC) AS ranking
        FROM MATCH_WEAPON_DETAIL mwd
                 JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                 JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                 JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
        WHERE mwd.DAMAGE > 0
        GROUP BY mm.MEMBER_ID, m.USERNAME
        ORDER BY ranking;
    </select>

    <select id="getClutchDealtRankings" resultType="com.jkky98.spubg.discord.domain.ClutchDealtRanking">
        SELECT
            username,
            clutch_dealt,
            RANK() OVER (ORDER BY clutch_dealt DESC) AS ranking
        FROM (
                 SELECT
                     m.username,
                     ROUND(SUM(100 * damage * (1 - (attacker_health / 100))) / COUNT(*), 2) AS clutch_dealt
                 FROM MATCH_WEAPON_DETAIL mwd
                          JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                          JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                          JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
                 WHERE mwd.DAMAGE > 0
                 GROUP BY mm.MEMBER_ID, m.username
             ) t
        ORDER BY ranking;
    </select>

    <select id="getGroggyRankings" resultType="com.jkky98.spubg.discord.domain.GroggyRanking">
        SELECT
            t.username,
            t.total_matches,
            t.groggy_ratio,
            RANK() OVER (ORDER BY t.groggy_ratio DESC) AS ranking
        FROM (
                 SELECT
                     m.username,
                     COUNT(DISTINCT mwd.m_mch_id) AS total_matches,
                     ROUND(SUM(CASE WHEN mwd.groggy = true THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT mwd.m_mch_id), 2) AS groggy_ratio
                 FROM MATCH_WEAPON_DETAIL mwd
                          JOIN MEMBER_MATCH mm ON mm.M_MCH_ID = mwd.M_MCH_ID
                          JOIN MEMBER m ON mm.MEMBER_ID = m.MEMBER_ID
                          JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
                 GROUP BY mm.MEMBER_ID, m.username
             ) AS t
        ORDER BY ranking;
    </select>

    <select id="getSmokeRankings" resultType="com.jkky98.spubg.discord.domain.SmokeRanking">
        SELECT
            USERNAME,
            WEAPON_NAME,
            ROUND(shot_count * 1.0 / NULLIF(total_match_count, 0), 2) AS per_match,
            RANK() OVER (ORDER BY shot_count * 1.0 / NULLIF(total_match_count, 0) DESC) AS ranking
        FROM (
                 SELECT
                     mem.USERNAME,
                     'SMOKE' AS WEAPON_NAME,
                     COUNT(*) AS shot_count,
                     (
                         SELECT COUNT(DISTINCT all_mwd.M_MCH_ID)
                         FROM MATCH_WEAPON_DETAIL all_mwd
                                  JOIN MEMBER_MATCH all_mm ON all_mwd.M_MCH_ID = all_mm.M_MCH_ID
                         WHERE all_mm.MEMBER_ID = mm.MEMBER_ID
                           AND all_mm.BOOL_IS_ANALYSIS = true
                     ) AS total_match_count
                 FROM MATCH_WEAPON_DETAIL mwd
                          JOIN MEMBER_MATCH mm ON mwd.M_MCH_ID = mm.M_MCH_ID
                          JOIN MEMBER mem ON mm.MEMBER_ID = mem.MEMBER_ID
                          JOIN MATCH mch ON mm.MATCH_ID = mch.MATCH_ID
                 WHERE mch.SEASON = 'division.bro.official.pc-2018-34'
                   AND mwd.WEAPON_NAME IN ('SMOKE_GRENADE', 'M79')
                 GROUP BY mem.USERNAME, mm.MEMBER_ID
             ) AS derived
        ORDER BY ranking;
    </select>
</mapper>